Idea for final project:

Liberty Mutual has begun to offer "By-Mile" insurance (insurance that comes with a short up-front fee and then you pay a small amount per mile driven per month). My project would center around creating a web application that integrates into the Google Maps API to calculate an estimated by trip cost for a given drive under a by-mile program. Ideally a customer would quote under the By-Mile program resulting in their By-Mile rate, then be brought to my application to put in a few routes and better understand their costs. Users would input a starting and ending destination (we would suggest they start with their commutes, and maybe even allow them to say how many days a week they commute, to get an estimated annual cost). 

Technologies used: Google Maps API, JDBC, Java Spring and some theoretical rates for by-mile. 

Product Backlog
A user will want to be able to better understand how their rate will be applied to their daily driving habits before deciding to bind. By integrating a map with options to fill common destinations, the user will enjoy the increased insight into how much their plan would end up costing in aggregate. 

A user requires options to select for their characteristics on the front end (age, years licensed, limits, etc) that will be attached to some appropriate rate on the back end. 

A user will need to see changes in their rate if they alter aspects of their "quote profile" in real time to see how their decisions effect their price per mile.

Once happy with their rate, a user will be able to input common routes in which they often drive to see their new price per route. This mileage calculation will be both performed and displayed by the Google Maps API.

A user will want to not only share their routes to determine their cost, but also specify how many times a week they might take those trips. We would have an area of the page that allows them to specify how often they take a given drive so that we could roll up an estimated total.

A user will want to compare their total rate under a normally priced plan to this estimated cost under a marginal cost system. The tool can display both prices with this new data generated by the Maps API. A front end area of the page would display both prices, ideally pulled from the database rate table. 

A user can decide to bind their policy, ideally placing them into some new table or triggering a flag in the user table for their record. 

A user may want to login later and access their quote, so adding a login system will allow them to return quickly to the data they have inputted without having to input again. This would also necessitate a register page, and a logout page. 

Mock Database Schema:
User Table of user data inputted through forms. This will include a column with a "rate code"
Rate Table would be a table containing mock marginal rates for all possible combinations of the dummy characteristics that I would input into the system. We could generate rates easily by hashing a concatenation of all characteristics. 
